<% # Can actually be probably used for other service types than full text.
   # But anyway, displays a typical full text element in typical markup.
   # pass in a ServiceType object for the response as :object 
   
   #optional argument, :locals => {:li_class => 'whatever'}
   li_class ||= "fulltextlink"
   show_source ||= false
   
   # passed in in :object or :collection 
   view_data = fulltext_element.view_data
%>

<li class="<%= li_class %>"> <%= link_to view_data[:display_text], {:controller=>'link_router', :id=>fulltext_element.id}, 'target'=>"_blank" %>

<% if show_source %>
  <div class="link_source">from <%= view_data[:source] || fulltext_element.service_response.service.display_name %></div>
<% end %>

<% unless view_data[:coverage].blank? %>
  <div class="response_coverage_statement">
  <%= view_data[:coverage] %>
  </div>
<% end
%>
<% unless view_data[:notes].blank? %>
  <div class="response_notes"><%= view_data[:notes] %></div>
<% end %>
<% unless view_data[:authentication].blank? %>
  <div class="response_authentication_instructions"><strong>Authentication:</strong> <%= view_data[:authentication] %></div>
<% end %>


<% if (!view_data[:match_reliability].blank?) && view_data[:match_reliability] != ServiceResponse::MatchExact %>
  <div class="edition_warning">
    <em class="label">May be an alternate edition</em> <%= view_data[:edition_str] %>
  </div>
<% end %>

<!-- debug info, hidden with CSS, can be made visible with javascript. -->
<div class="debug_info" style="display:none">
  <b>Debug info:</b> <%= fulltext_element.service_response.service.id %>
  
  <% unless view_data[:debug_info].blank? %>
    ; <%= view_data[:debug_info] %>
  <% end %>

</div>


</li>
