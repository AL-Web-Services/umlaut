
<%= render :partial=>'background_updater' %>
         
<div id="bothColumns"> <!-- actual wrapper for both columns -->
  <div id="twoColumns"> <!-- called twoColumns, but it's really just the left column -->


  <h1>Find a <%=@user_request.referent.type_of_thing.titlecase %></h1>
  
  <div class="resourceInfo">
    <table width="100%" cellpadding="3" cellspacing="0">
      <tr>
        <td>      
          <%= render :partial=>'citation' %>          
          <div id="search_inside_wrapper">
            <%= render(:partial => "search_inside") %>
          </div>
        </td>
        
        <td align='right'>
          <div id="cover_image">
            <%= render(:partial => "cover_image") %>
          </div>
        </td>
      </tr>
    </table>
  </div>  
  
  <div class="availability">
  
    <div id="fulltext_wrapper">
      <%= render(:partial => "fulltext") %>
    </div>
    
    <div id="excerpts_wrapper">
      <%= render(:partial => "excerpts") %>
    </div>
    
    <div id="audio_wrapper">
      <%= render(:partial => "audio") %>
    </div>
  
    <% holding_output = capture do %>
      <div id="holding" class="main_column_section">
        <%= render(:partial => ResolveController.partial_for_block[:holding] ) %>
      </div>
    <% end %>
      
    
    <% docdel_output = capture do %>
      <% docdels = get_service_type('document_delivery')
         if (display_ill?) && (! docdels.empty?)  %>
            <div id="document_delivery" class="main_column_section document_delivery">              
                <%= render(:partial => "document_delivery" ) %>            
            </div>
      <% end %>
    <% end %>
    
    <!-- sometimes holding and docdel have their display order reversed
         by local configuration -->    
    <%  
        sections = AppConfig.param("resolve_main_sections")
    
        h_index = index_of_id("resolve_main_sections", "holding") 
        d_index = index_of_id("resolve_main_sections", "document_delivery")
        
        if d_index >= h_index
    %>             
        <%= holding_output %>    
        <%= docdel_output %>
    <% else %>
        <%= docdel_output %>
        <%= holding_output %>
    <% end %>
        


    <% # abstract/toc is admittedly a little bit cheesy right now, it shouldn't
       # neccesary be in this part of the page, and should maybe use
       # fancier ajaxy tab stuff, but we had to get it done. Doesn't deal
       # with background services quite yet. 
    %>

      <% toc_list = get_service_type('table_of_contents')
         ab_list = get_service_type('abstract')
      %>
    <div id="abstract_and_toc" class="main_column_section">

      <div id="tables_of_contents" style="margin-bottom: 8px;" >
        <% unless toc_list.empty? %>
          <%= render(:partial=>'tables_of_contents') %>
        <% end %>      
      </div>
      
      <div id="abstracts">
        <% unless ab_list.empty? %>
          <%= render(:partial=>'abstracts') %>
        <% end %>
      </div>

      
    </div>
        

    
  <!--close availability-->
  </div>

<%
relevant_links = get_service_type('relevant_link')
unless relevant_links.empty? %>
  <div class="line"></div>
  <div class="closestResults">
  <div id="show_closest_web_results">
  <p><strong>Closest Web Results:</strong>  [<%= link_to_function "hide", "activelyHideWebResults()"%>]</p>
  <ul>
  <% relevant_link.each do |web|
     target = web.service.to_web_link
  %>
    <li><%= link_to target[:title], {:controller=>'link_router', :id=>web.id}, 'target'=>"_blank"%>
    <br />
    <%= target[:description] %>
  <% end %>
  </ul>
  
</li>
</div><!-- close show_closest_web_results -->
  <div id="hidden_closest_web_results">
  <p>[<%= link_to_function "Show closest web results", "activelyShowWebResults()"%>]</p>
  </div>
  
</div> 
<% end %>




<!--close twoColumns--></div>
  
<div id="rightColumn">

  <div class="sidebar_section, smGrayBox">
    <%= render :partial=>"help" 
    %>
  </div>

  <!-- coins -->
  <%= @user_request.to_context_object.coins %>


  <div class="sidebar_section">    
  <%
  #{:action=>'web_search', :service_type=>'web_link', :label=>'Web Search Results'}
  [{:action=>'toc', :service_type=>'table_of_contents', :label=>'Table of Contents'},
  {:action=>'abstract', :service_type=>'abstract', :label=>'Abstract or Description'}].each do | menu |
      unless controller.action_name == menu[:action]
          if get_service_type(menu[:service_type]).length > 0
              li_display= 'block'
          else
              li_display = 'none'
          end %>
    <!-- <p class="tightbullets" id='umlaut-<%=  menu[:service_type].gsub(/\s/,'_')-%>' style="display:<%=li_display%>"> -->
    <% link_to menu[:label], :action=>menu[:action], :'umlaut.request_id'=>@user_request.id %></p>
    <% end 
    end
    %>
  </div>

  <!-- only show the related_items if we're an article-level cite,
       or we actually have some generated -->
  <%
     if (!(title_level_request?) ||
         get_service_type('similar').length > 0 ||
         get_service_type('cited_by').length >0)
   %>
    <div id="related_items" class="smGrayBox">
      <%= render :partial=>"related_items" %>
    </div>
  <% else %>
    <!-- putting a div here anyway as a target for the ajax, to avoid
         issues -->
    <div id="related_items" style="display:none"></div>
  <% end %>
  
  
  <div id="export_citation">
  <%= render :partial=>"export" %>
  </div>
  
  <div id="highlighted_links">
  <%= render :partial=>"highlighted_links_start" %>
  </div>
  
  <!-- service errors -->
  <div id="service_errors">
     <%= render :partial => 'service_errors' %>          
  </div>
       
  
</div>
  

<!-- close bothColumns --> </div> 


<!-- END SERVICE IN PROGRESS: -->
